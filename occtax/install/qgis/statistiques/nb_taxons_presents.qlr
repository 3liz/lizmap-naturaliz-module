<!DOCTYPE qgis-layer-definition>
<qlr>
  <layer-tree-group expanded="1" checked="Qt::Checked" name="">
    <customproperties/>
    <layer-tree-layer expanded="1" checked="Qt::Checked" id="test20170523151347012" name="nb_taxons_presents">
      <customproperties/>
    </layer-tree-layer>
  </layer-tree-group>
  <maplayers>
    <maplayer minimumScale="-4.65661e-10" maximumScale="1e+08" geometry="No geometry" type="vector" hasScaleBasedVisibilityFlag="0">
      <id>test20170523151347012</id>
      <datasource>service='naturaliz' sslmode=disable key='_uid_' estimatedmetadata=true table="(SELECT row_number() over () AS _uid_,* FROM (SELECT
      (regexp_split_to_array( Coalesce( tgc1.cat_nom, tgc2.cat_nom, 'Autres' ), ' '))[1] AS categorie,
      Count(DISTINCT f.cd_nom) AS nb_taxon_present
      FROM (
        SELECT
        o.cle_obs,
        o.nom_cite,
        o.cd_nom,
        to_char(date_debut, 'YYYY-MM-DD') AS date_debut
        FROM   \"observation\"  AS o
        WHERE True
        -- AND o.validite_niveau IN ( '1', '2' )
      )
       AS f
       LEFT JOIN taxref_consolide AS t ON t.cd_nom = f.cd_nom

       LEFT JOIN t_group_categorie tgc1 ON tgc1.groupe_nom = t.group1_inpn AND tgc1.groupe_type = 'group1_inpn'
       LEFT JOIN t_group_categorie tgc2 ON tgc2.groupe_nom = t.group2_inpn AND tgc2.groupe_type = 'group2_inpn'
       GROUP BY tgc1.cat_nom, tgc2.cat_nom
       ORDER BY categorie
      ) AS _subq_1_
)" sql=</datasource>
      <title>Nombre de taxons observés</title>
      <abstract>Représentation du nombre de taxons observés, classés par groupe taxonomique</abstract>
      <keywordList>
        <value></value>
      </keywordList>
      <layername>nb_taxons_presents</layername>
      <srs>
        <spatialrefsys>
          <proj4>+proj=longlat +datum=WGS84 +no_defs</proj4>
          <srsid>3452</srsid>
          <srid>4326</srid>
          <authid>EPSG:4326</authid>
          <description>WGS 84</description>
          <projectionacronym>longlat</projectionacronym>
          <ellipsoidacronym>WGS84</ellipsoidacronym>
          <geographicflag>true</geographicflag>
        </spatialrefsys>
      </srs>
      <customproperties>
        <property key="variableNames"/>
        <property key="variableValues"/>
      </customproperties>
      <provider encoding="UTF-8">postgres</provider>
      <previewExpression>COALESCE("_uid_", '&lt;NULL>')</previewExpression>
      <vectorjoins/>
      <layerDependencies/>
      <expressionfields/>
      <map-layer-style-manager current="">
        <map-layer-style name=""/>
      </map-layer-style-manager>
      <edittypes>
        <edittype widgetv2type="TextEdit" name="_uid_">
          <widgetv2config IsMultiline="0" fieldEditable="1" UseHtml="0" labelOnTop="0"/>
        </edittype>
        <edittype widgetv2type="TextEdit" name="categorie">
          <widgetv2config IsMultiline="0" fieldEditable="1" UseHtml="0" labelOnTop="0"/>
        </edittype>
        <edittype widgetv2type="TextEdit" name="nb_taxon_present">
          <widgetv2config IsMultiline="0" fieldEditable="1" UseHtml="0" labelOnTop="0"/>
        </edittype>
      </edittypes>
      <annotationform>.</annotationform>
      <aliases>
        <alias field="_uid_" index="0" name="Id"/>
        <alias field="categorie" index="1" name="Groupe"/>
        <alias field="nb_taxon_present" index="2" name="Taxons"/>
      </aliases>
      <excludeAttributesWMS/>
      <excludeAttributesWFS/>
      <attributeactions/>
      <editform>.</editform>
      <editforminit/>
      <editforminitcodesource>0</editforminitcodesource>
      <editforminitfilepath>.</editforminitfilepath>
      <editforminitcode><![CDATA[# -*- coding: utf-8 -*-
"""
Les formulaires QGIS peuvent avoir une fonction Python qui sera appelée à l'ouverture du formulaire.

Utilisez cette fonction pour ajouter plus de fonctionnalités à vos formulaires.

Entrez le nom de la fonction dans le champ
"Fonction d'initialisation Python"
Voici un exemple à suivre:
"""
from PyQt4.QtGui import QWidget

def my_form_open(dialog, layer, feature):
⇥geom = feature.geometry()
⇥control = dialog.findChild(QWidget, "MyLineEdit")
]]></editforminitcode>
      <featformsuppress>0</featformsuppress>
      <editorlayout>generatedlayout</editorlayout>
      <widgets/>
      <conditionalstyles>
        <rowstyles/>
        <fieldstyles/>
      </conditionalstyles>
    </maplayer>
  </maplayers>
</qlr>
